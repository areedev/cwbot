<!DOCTYPE html>

<head>
  <title>CWB - Settings</title>
  <link href="/css/style.css" rel="stylesheet" type="text/css" />
</head>

<body>
  <%- include('./partials/header', {id: id, from: 'settings' }); %>
    <div class="main">
      <%- include('./partials/sidebar', {id: id, from: 'settings' }); %>
        <div class="main-content">
          <div class="settings">
            <div style="display: flex;">
              <p class="">username</p>
              <input class="username" />
              <p class="">password</p>
              <input type="password" class="password" />
            </div>
            <div class="proxies">

            </div>
            <div class="bids">
              <div style="display:flex; width: 100%;">
                <div style="flex: 1;">
                  <p class="title">Web</p>
                  <textarea class="bid web"></textarea>
                </div>
                <div style="flex: 1;">
                  <p class="title">App</p>
                  <textarea class="bid app"></textarea>
                </div>
              </div>
              <div style="display:flex;width: 100%;">
                <div style="flex: 1;">
                  <p class="title">Sys</p>
                  <textarea class="bid sys"></textarea>
                </div>
                <div style="flex: 1;">
                  <p class="title">EC</p>
                  <textarea class="bid ec"></textarea>
                </div>
              </div>

            </div>
            <div class="cookie">
              <p class="title">Cookie</p>
              <textarea class="cookie"></textarea>
            </div>
            <div class="buttons">
              <div>
                <input type="checkbox" id="auto" name="auto" class="auto">
                <label for="auto">Auto</label>
              </div>
              <button class='button save'>Save</button>
              <button class='button start' style="display: none;">Start</button>
              <button class='button once'>Once</button>
              <button class='button stop' style="display: none;">Stop</button>
            </div>
            <p class="time-notice"></p>
          </div>
        </div>
    </div>
</body>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
  $(document).ready(function () {
    var web = '', app = '', ec = '', cookie = '', sys = '', username = '', password = ''
    var running = false
    $('.settings .username').on('input', (e) => username = e.target.value)
    $('.settings .password').on('input', (e) => password = e.target.value)
    var id = "<%= id %>"
    document.querySelector('.button.save').addEventListener('click', save)
    document.querySelector('.button.start').addEventListener('click', start)
    document.querySelector('.button.once').addEventListener('click', once)
    document.querySelector('.button.stop').addEventListener('click', stop)
    loadSettings()
    function save() {
      var web = document.querySelector('.settings .bids .web').value
      var app = document.querySelector('.settings .bids .app').value
      var ec = document.querySelector('.settings .bids .ec').value
      var sys = document.querySelector('.settings .bids .sys').value
      var auto = document.querySelector('.settings .auto').checked
      var cookie = document.querySelector('.settings .cookie .cookie').value
      var username = document.querySelector('.settings .username').value
      var password = document.querySelector('.settings .password').value
      var proxy = document.querySelector('.proxies select').value
      // var ip = document.querySelector('.settings .ip').value
      // var port = document.querySelector('.settings .port').value
      // var type = document.querySelector('.settings .proxy_type').value
      // var proxy_username = document.querySelector('.settings .proxy_username').value
      // var proxy_password = document.querySelector('.settings .proxy_password').value
      $.post(`/api/settings/save`,
        { bids: { web, app, ec, sys }, cookie, auth: { username, password }, id, auto, proxy },
        function (data, status) {
          console.log(data)
        })
    }
    function once() {
      $.get(`/api/settings/once/${id}`, function (data, status) {
        console.log(data)
      })
    }
    function start() {
      if (running) return
      $.get(`/api/settings/start/${id}`, function (data, status) {
        if (data == 'running') {
          document.querySelector('.settings .buttons .button.start').classList.add('disabled')
          document.querySelector('.settings .buttons .button.stop').classList.remove('disabled')
          running = true
        }
      })
    }
    function stop() {
      if (!running) return
      $.get(`/api/settings/stop/${id}`, function (data, status) {
        if (data == 'stopped') {
          document.querySelector('.settings .buttons .button.start').classList.remove('disabled')
          document.querySelector('.settings .buttons .button.stop').classList.add('disabled')
          running = false
        }
      })
    }
    function loadSettings() {
      $.get(`/api/settings/${id}`, function (data, status) {
        var { settings, remainedTime } = data
        running = settings.status ? settings.status == 'running' : false
        document.querySelector('.settings .bids .web').innerHTML = settings?.bids?.web || ''
        document.querySelector('.settings .bids .app').innerHTML = settings?.bids?.app || ''
        document.querySelector('.settings .bids .ec').innerHTML = settings?.bids?.ec || ''
        document.querySelector('.settings .bids .sys').innerHTML = settings?.bids?.sys || ''
        document.querySelector('.settings .cookie .cookie').innerHTML = settings?.cookie || ''
        document.querySelector('.settings .username').value = settings?.auth?.username || ''
        document.querySelector('.settings .password').value = settings?.auth?.password || ''
        document.querySelector('.settings .auto').checked = settings?.auto
        // document.querySelector('.settings .ip').value = settings?.proxy?.ip || ''
        // document.querySelector('.settings .port').value = settings?.proxy?.port || ''
        // document.querySelector('.settings .proxy_username').value = settings?.proxy?.username || ''
        // document.querySelector('.settings .proxy_password').value = settings?.proxy?.password || ''
        // document.querySelector('.settings .proxy_type').value = settings?.proxy?.type || 'http'
        const hours = Math.floor(remainedTime / 3600)
        const mins = Math.floor((remainedTime - hours * 3600) / 60)
        const seconds = remainedTime - hours * 3600 - mins * 60
        document.querySelector('.settings .time-notice').innerHTML = `${hours} Hours, ${mins} Mins, ${seconds} Seconds remained until next tick...`
        console.log(running)
        if (running) {
          document.querySelector('.settings .buttons .button.start').classList.add('disabled')
          document.querySelector('.settings .buttons .button.stop').classList.remove('disabled')
        } else {
          document.querySelector('.settings .buttons .button.start').classList.remove('disabled')
          document.querySelector('.settings .buttons .button.stop').classList.add('disabled')
        }

        // Proxy

        var proxyList = data.proxies
        var proxies = document.querySelector('.proxies')
        proxies.innerHTML += '<p>Proxy</p>'
        var options = `<option ${!settings.proxy ? 'selected' : ''}>None</option>`
        options += proxyList.map(e => `<option value=${e._id} ${e._id == settings.proxy ? 'selected' : ''}>${e.type + '://' + e.ip + ':' + e.port}</option>`)
        proxies.innerHTML += `
          <select value="${settings.proxy || ''}">
            ${options}
          </select>
        `
      });
    }
  });
</script>